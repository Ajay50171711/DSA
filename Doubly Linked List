// Implementation of doubly linked list.....

#include<stdlib.h>
#include<stdio.h>
int main()
{
	struct node{
		int data;
		struct node *next;
		struct node *prev;
	};

	int choice =1, count=0;
	struct node *newnode,*temp,*head;
	
	head = NULL;
	while(choice){
	 	newnode = (struct node*)malloc(sizeof(struct node));
	 	
		printf("enter the data for the newnode");
	
		scanf("%d",&newnode->data);
		newnode->next->next->prev=newnode->next;
		newnode->next = NULL;

		
		 if(head==NULL){
		 	head=temp=newnode;
		 }
		 else{
		 temp->next=newnode;
		 temp=newnode;
		 }
		 count++;
		 
		printf("Enter 1 if you wanna add more elements Else enter 0 : ");
		 scanf("%d",&choice);
	}
	printf("elements of the LInked LIst are:\n");
	temp=head;
	while(temp!=NULL){
		printf("%d\n",temp->data);
		temp=temp->next;
		
	}

return 0;

}


----------------------------------------------
//insert node at start and end of the doubly linked list

#include<stdio.h>
#include<stdlib.h>
int main(){
	
	struct node{
		int data;
		struct node *next;
		struct node *prev;
		
	};
	
	
	struct node *head,*temp,*newnode;
	int choice = 1;
	head = NULL;
	
	while(choice){
	
	newnode = (struct node*)malloc(sizeof(struct node));
	printf("data\n");
	scanf("%d",&newnode->data);
	newnode->next = NULL;
	newnode->prev = NULL;
	if(head == NULL){
		head = temp = newnode;
	}
	else{
		temp->next = newnode;
		newnode->prev = temp;
		temp = newnode;
	}
	printf("choice 1/0\n");
	scanf("%d",&choice);
	
}

temp = head;
while(temp!=NULL){
	printf("%d\n",temp->data);
	temp = temp->next;
}

// insert at start
	
	printf("now we are going to insert at beginning\n");
	
	
	newnode = (struct node*)malloc(sizeof(struct node));
	printf("enter the data for new node");
	scanf("%d",&newnode->data);
	newnode->next = head;
	head->prev = newnode;
	newnode->prev = NULL;
	head = newnode;
	
	 temp = head;
	 while(temp!=NULL){
	 	printf("%d\n",temp->data);
	temp = temp->next;
	 }
	 
	// insert at end
	
	
	 printf("now we are going to insert at the end\n ");
	
	newnode = (struct node*)malloc(sizeof(struct node));
	
	printf("enter the data for new node");
	scanf("%d",&newnode->data); 
	 
	 temp = head;
	 while(temp->next!=NULL){
	 	temp=temp->next;
	 }
	 
	 temp->next = newnode;
	 newnode->prev = temp;
	 newnode->next = NULL;

temp = head;
while(temp!=NULL){
	printf("%d\n",temp->data);
	temp = temp->next;
}
	
	
	return 0;
}



//insert at specific postion

#include<stdio.h>
#include<stdlib.h>
int main(){
	
	struct node{
		int data;
		struct node *next;
		struct node *prev;
	};
		int pos;
		
	
	
	
	struct node *head,*temp,*newnode;
	int choice = 1;
	head = NULL;
	while(choice){  
	
	newnode = (struct node*)malloc(sizeof(struct node));
	printf("data\n");
	scanf("%d",&newnode->data);
	newnode->next = NULL;
	newnode->prev = NULL;
	if(head == NULL){
		head = temp = newnode;
	}
	else{
		temp->next = newnode;
		newnode->prev = temp;
		temp = newnode;
	}
	printf("choice 1/0\n");
	scanf("%d",&choice);
	
    }

temp = head;
while(temp!=NULL){
	printf("%d\n",temp->data);
	temp = temp->next;
     }
     	
		printf("now we are going to insert at specific position\n  Enter position on which you wanna insert the newnode");
		scanf("%d",& pos);
	
	newnode = (struct node*)malloc(sizeof(struct node));
	printf("enter the data for new node");
	scanf("%d",&newnode->data);
	
	temp=head;
	int i=1;
	while(i<pos-1)
		{
			temp=temp->next;
			i++;
		}
	newnode->prev=temp;
	newnode->next=temp->next;
	temp->next->next->prev=newnode;
	temp->next=newnode;

	 temp = head;
	 while(temp!=NULL){
	 	printf("%d\n",temp->data);
	temp = temp->next;
	 }
     
     return 0;
     
}


----------------------------------------------------------------

Deleting in Doubly Linked List

//Delete at Start

#include<stdio.h>
#include<stdlib.h>
int main(){
	
	struct node{
		int data;
		struct node *next;
		struct node *prev;
	};
		int pos;
		
		struct node *head,*temp,*newnode;
	int choice = 1;
	head = NULL;
	while(choice){  
	
	newnode = (struct node*)malloc(sizeof(struct node));
	printf("data\n");
	scanf("%d",&newnode->data);
	newnode->next = NULL;
	newnode->prev = NULL;
	if(head == NULL){
		head = temp = newnode;
	}
	else{
		temp->next = newnode;
		newnode->prev = temp;
		temp = newnode;
	}
	printf("choice 1/0\n");
	scanf("%d",&choice);
	
    }
    
    
temp = head;
while(temp!=NULL){
	printf("%d\n",temp->data);
	temp = temp->next;
     }
     	
		printf("now we are going to delete at first\n");
	
	temp=head;
	head=head->next;
	free (temp);
	

	 temp = head;
	 while(temp!=NULL){
	 	printf("%d\n",temp->data);
	temp = temp->next;
	 }
     
     return 0;
     
}

//Delete at END

#include<stdio.h>
#include<stdlib.h>
int main(){
	
	struct node{
		int data;
		struct node *next;
		struct node *prev;
	};
		int pos;
		
		struct node *head,*temp,*newnode;
	int choice = 1;
	head = NULL;
	while(choice){  
	
	newnode = (struct node*)malloc(sizeof(struct node));
	printf("data\n");
	scanf("%d",&newnode->data);
	newnode->next = NULL;
	newnode->prev = NULL;
	if(head == NULL){
		head = temp = newnode;
	}
	else{
		temp->next = newnode;
		newnode->prev = temp;
		temp = newnode;
	}
	printf("choice 1/0\n");
	scanf("%d",&choice);
	
    }
    
temp = head;
while(temp!=NULL){
	printf("%d\n",temp->data);
	temp = temp->next;
     }
     	
		printf("now we are going to delete at end\n");
	
	
	temp=head;
	while(temp->next->next!=NULL)
	{
		temp=temp->next;
	}
	free (temp->next->next);
	temp->next=NULL;
	

		
	temp = head;
	while(temp!=NULL)
	{
	 printf("%d\n",temp->data);
	 temp = temp->next;
    }
     
     
     return 0;
     
}

//Delete at SPECIFIC POSITION

#include<stdio.h>
#include<stdlib.h>
int main(){
	
	struct node{
		int data;
		struct node *next;
		struct node *prev;
	};
		int pos;
		
		struct node *head,*temp,*newnode, *del;
	int choice = 1;
	head = NULL;
	while(choice){  
	
	newnode = (struct node*)malloc(sizeof(struct node));
	printf("data\n");
	scanf("%d",&newnode->data);
	newnode->next = NULL;
	newnode->prev = NULL;
	if(head == NULL){
		head = temp = newnode;
	}
	else{
		temp->next = newnode;
		newnode->prev = temp;
		temp = newnode;
	}
	printf("choice 1/0\n");
	scanf("%d",&choice);
	
    }
    
temp = head;
while(temp!=NULL){
	printf("%d\n",temp->data);
	temp = temp->next;
     }
     	
		printf("now we are going to delete at end\n");
	
	printf("now we are going to delete from the specific position\n");
	printf("enter the position");
	scanf("%d",&pos);
	
	temp=head;
	int i=1;
	while(i<pos-1)
	{
		temp=temp->next;
		i++;
	}
	del=temp->next;
	temp->next->next->prev=temp;
	temp->next=temp->next->next;
	free(del);
		
	temp = head;
	while(temp!=NULL)
	{
	 printf("%d\n",temp->data);
	 temp = temp->next;
    } 
     return 0;
     
}
